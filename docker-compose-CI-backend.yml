version: "3.4"

services:

   admin-api:
     container_name: admin-api
     build: ./adminAPI
     working_dir: /code
     command: npm run start:dev
     volumes:
       - ./adminAPI/app:/code/app
     ports:
       - 8081:3000
     environment:
       - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}
       - MYSQL_DATABASE=${MYSQL_DATABASE}
       - MYSQL_USER=${MYSQL_USER}
       - MYSQL_PASSWORD=${MYSQL_PASSWORD}
     restart: on-failure

   user-api:
     container_name: user-api
     build: ./userAPI
     working_dir: /code
     command: npm run start:dev
     volumes:
       - ./userAPI/app:/code/app
     ports:
       - 8082:3000
     environment:
       - MYSQL_DATABASE=${MYSQL_DATABASE}
       - MYSQL_USER=${MYSQL_USER}
       - MYSQL_PASSWORD=${MYSQL_PASSWORD}
       - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
       - GITHUB_SECRET=${GITHUB_SECRET}
       - JWT_USER_SECRET=${JWT_USER_SECRET}
     restart: on-failure

   mariadb:
     container_name: mariadb
     image: mariadb:latest
     restart: always
     volumes:
      - ./mariadb/:/docker-entrypoint-initdb.d/
      # - ./mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql
      # - ./mariadb/init_data:/docker-entrypoint-initdb.d/init_data
     ports:
      #  - 8084:3306
       - 9091:3306
     environment:
       - MYSQL_DATABASE: ${MYSQL_DATABASE}
       - MYSQL_USER: ${MYSQL_USER}
       - MYSQL_PASSWORD: ${MYSQL_PASSWORD}
       - MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      #  MYSQL_ROOT_PASSWORD: admin
      #  MYSQL_DATABASE: mydb
      #  MYSQL_USER: user
      #  MYSQL_PASSWORD: user
